{{- if .Values.housekeeping.enabled -}}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ printf "%s-housekeeping" (include "common.names.fullname" .) | trunc 63 | trimSuffix "-" }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
    app.kubernetes.io/component: housekeeping
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  concurrencyPolicy: {{ .Values.housekeeping.concurrencyPolicy }}
  failedJobsHistoryLimit: {{ .Values.housekeeping.failedJobsHistoryLimit }}
  schedule: {{ .Values.housekeeping.schedule | quote }}
  successfulJobsHistoryLimit: {{ .Values.housekeeping.successfulJobsHistoryLimit }}
  suspend: {{ .Values.housekeeping.suspend }}
  jobTemplate:
    metadata:
      labels:
        {{- include "common.labels.standard" . | nindent 8 }}
    spec:
      template:
        metadata:
          {{- with .Values.housekeeping.podAnnotations }}
          annotations:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          labels:
            {{- include "common.labels.matchLabels" . | nindent 12 }}
            app.kubernetes.io/component: housekeeping
            {{- with .Values.housekeeping.podLabels }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
        spec:
          {{- include "common.images.renderPullSecrets" (dict "images" (list .Values.image) "context" $) | nindent 10 }}
          serviceAccountName: {{ include "netbox.serviceAccountName" . }}
          automountServiceAccountToken: {{ .Values.housekeeping.automountServiceAccountToken }}
          {{- if .Values.housekeeping.podSecurityContext.enabled }}
          securityContext: {{- omit .Values.housekeeping.podSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.housekeeping.initContainers }}
          initContainers: {{- include "common.tplvalues.render" (dict "value" .Values.housekeeping.initContainers "context" $) | trim | nindent 12 }}
          {{- end }}
          containers:
          - name: {{ .Chart.Name }}-housekeeping
            {{- if .Values.housekeeping.securityContext.enabled }}
            securityContext: {{- omit .Values.housekeeping.securityContext "enabled" | toYaml | nindent 14 }}
            {{- end }}
            image: {{ include "netbox.image" . | quote }}
            imagePullPolicy: {{ .Values.image.pullPolicy }}
            {{- if .Values.housekeeping.command }}
            command: {{- include "common.tplvalues.render" (dict "value" .Values.housekeeping.command "context" $) | nindent 14 }}
            {{- end }}
            {{- if .Values.housekeeping.args }}
            args: {{- include "common.tplvalues.render" (dict "value" .Values.housekeeping.args "context" $) | nindent 14 }}
            {{- end }}
            {{- with .Values.housekeeping.extraEnvs }}
            env:
            {{- toYaml . | nindent 12 }}
            {{- end }}
            volumeMounts:
            - name: config
              mountPath: /etc/netbox/config/configuration.py
              subPath: configuration.py
              readOnly: true
            {{- range .Values.remoteAuth.backends }}
            {{- if eq . "netbox.authentication.LDAPBackend" }}
            - name: config
              mountPath: /etc/netbox/config/ldap/ldap_config.py
              subPath: ldap_config.py
              readOnly: true
            {{- end }}
            {{- end }}
            - name: config
              mountPath: /run/config/netbox
              readOnly: true
            - name: secrets
              mountPath: /run/secrets/netbox
              readOnly: true
            {{- include "netbox.extraConfig.volumeMounts" . | nindent 12 -}}
            - name: netbox-tmp
              mountPath: /tmp
            - name: media
              mountPath: /opt/netbox/netbox/media
              subPath: {{ .Values.persistence.subPath | default "" | quote }}
            {{- if .Values.reportsPersistence.enabled }}
            - name: reports
              mountPath: /opt/netbox/netbox/reports
              subPath: {{ .Values.reportsPersistence.subPath | default "" | quote }}
            {{- end }}
            {{- if .Values.scriptsPersistence.enabled }}
            - name: scripts
              mountPath: /opt/netbox/netbox/scripts
              subPath: {{ .Values.scriptsPersistence.subPath | default "" | quote }}
            {{- end }}
            {{- with .Values.housekeeping.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
            {{- if .Values.housekeeping.resources }}
            resources: {{ toYaml .Values.housekeeping.resources | nindent 14 }}
            {{- else if ne .Values.housekeeping.resourcesPreset "none" }}
            resources: {{- include "common.resources.preset" (dict "type" .Values.housekeeping.resourcesPreset) | nindent 14 }}
            {{- end }}
          {{- if .Values.housekeeping.sidecars }}
          {{- include "common.tplvalues.render" (dict "value" .Values.housekeeping.sidecars "context" $) | nindent 10 }}
          {{- end }}
          volumes:
          - name: config
            configMap:
              name: {{ include "common.names.fullname" . }}
          - name: secrets
            projected:
              sources:
              - secret:
                  name: {{ include "common.secrets.name" (dict "existingSecret" .Values.existingSecret "defaultNameSuffix" "config" "context" $) }}
                  items:
                  - key: email_password
                    path: email_password
                  - key: secret_key
                    path: secret_key
                  {{- range .Values.remoteAuth.backends }}
                  {{- if eq . "netbox.authentication.LDAPBackend" }}
                  - key: ldap_bind_password
                    path: ldap_bind_password
                  {{- end }}
                  {{- end }}
              - secret:
                  name: {{ include "netbox.postgresql.secret" . | quote }}
                  items:
                  - key: {{ include "netbox.postgresql.secretKey" . | quote }}
                    path: db_password
              - secret:
                  name: {{ include "netbox.tasksRedis.secret" . | quote }}
                  items:
                  - key: {{ include "netbox.tasksRedis.secretKey" . | quote }}
                    path: redis_tasks_password
              - secret:
                  name: {{ include "netbox.cachingRedis.secret" . | quote }}
                  items:
                  - key: {{ include "netbox.cachingRedis.secretKey" . | quote }}
                    path: redis_cache_password
          {{- include "netbox.extraConfig.volumes" . | nindent 10 -}}
          - name: netbox-tmp
            emptyDir:
              medium: Memory
          - name: media
            {{- if .Values.persistence.enabled }}
            persistentVolumeClaim:
              claimName: {{ .Values.persistence.existingClaim | default (printf "%s-media" (include "common.names.fullname" .)) }}
            {{- else }}
            emptyDir: {}
            {{- end }}
          {{- if .Values.reportsPersistence.enabled }}
          - name: reports
            persistentVolumeClaim:
              claimName: {{ .Values.reportsPersistence.existingClaim | default (printf "%s-reports" (include "common.names.fullname" .)) }}
          {{- end }}
          {{- if .Values.scriptsPersistence.enabled }}
          - name: scripts
            persistentVolumeClaim:
              claimName: {{ .Values.scriptsPersistence.existingClaim | default (printf "%s-scripts" (include "common.names.fullname" .)) }}
          {{- end }}
          {{- with .Values.housekeeping.extraVolumes }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
          {{- with .Values.housekeeping.nodeSelector }}
          nodeSelector:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.housekeeping.affinity }}
          affinity:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.housekeeping.tolerations }}
          tolerations:
          {{- toYaml . | nindent 10 }}
          {{- end }}
          restartPolicy: {{ .Values.housekeeping.restartPolicy }}
{{- end -}}
