apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.4
  name: prefixclaims.netbox.dev
spec:
  group: netbox.dev
  names:
    kind: PrefixClaim
    listKind: PrefixClaimList
    plural: prefixclaims
    shortNames:
      - pxc
    singular: prefixclaim
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.prefix
          name: Prefix
          type: string
        - jsonPath: .status.conditions[?(@.type=="PrefixAssigned")].status
          name: PrefixAssigned
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1
      schema:
        openAPIV3Schema:
          description: |-
            PrefixClaim allows to claim a NetBox Prefix from an existing Prefix
            (parentPrefix) or a dynamically selected Prefix (parentPrefixSelector).
            The PrefixClaim Controller will try to assign an available Prefix from
            the Prefix that is defined in the spec and if successful it will create
            the Prefix CR. More info about NetBox IP Addresses:
            https://github.com/netbox-community/netbox/blob/main/docs/models/ipam/ipaddress.md
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: PrefixClaimSpec defines the desired state of PrefixClaim
              properties:
                comments:
                  description: |-
                    Comment that should be added to the resource in NetBox
                    Field is mutable, not required
                  type: string
                customFields:
                  additionalProperties:
                    type: string
                  description: |-
                    The NetBox Custom Fields that should be added to the resource in NetBox.
                    Note that currently only Text Type is supported (GitHub #129)
                    More info on NetBox Custom Fields:
                    https://github.com/netbox-community/netbox/blob/main/docs/customization/custom-fields.md
                    Field is mutable, not required
                    Example:
                      customfield1: "Production"
                      customfield2: "This is a string"
                  type: object
                description:
                  description: |-
                    Description that should be added to the resource in NetBox
                    Field is mutable, not required
                  type: string
                parentPrefix:
                  description: |-
                    The NetBox Prefix from which this Prefix should be claimed from
                    Field is immutable, required (`parentPrefix` and `parentPrefixSelector` are mutually exclusive)
                    Example: "192.168.0.0/20"
                  format: cidr
                  type: string
                  x-kubernetes-validations:
                    - message: Field 'parentPrefix' is immutable
                      rule: self == oldSelf
                parentPrefixSelector:
                  additionalProperties:
                    type: string
                  description: |-
                    The `parentPrefixSelector` is a key-value map, where all the entries are of data type `<string-string>` The map contains a set of query conditions for selecting a set of prefixes that can be used as the parent prefix The query conditions will be chained by the AND operator, and exact match of the keys and values will be performed The built-in fields `tenant`, `site`, and `family`, along with custom fields, can be used. Note that since the key value pairs in this map are used to generate the URL for the query in NetBox, this also supports non-Text Custom Field types. For more information, please see ParentPrefixSelectorGuide.md
                    Field is immutable, required (`parentPrefix` and `parentPrefixSelector` are mutually exclusive)
                    Example:
                      customfield1: "Production"
                      family: "IPv4"
                  type: object
                  x-kubernetes-validations:
                    - message: Field 'parentPrefixSelector' is immutable
                      rule: self == oldSelf
                    - rule:
                        "!has(self.family) || (self.family == 'IPv4' || self.family
                        == 'IPv6')"
                prefixLength:
                  description: |-
                    The desired prefix length of your Prefix using slash notation. Example: `/24` for an IPv4 Prefix or `/64` for an IPv6 Prefix
                    Field is immutable, required
                    Example: "/24"
                  pattern: ^\/[0-9]|[1-9][0-9]|1[01][0-9]|12[0-8]$
                  type: string
                  x-kubernetes-validations:
                    - message: Field 'prefixLength' is immutable
                      rule: self == oldSelf
                preserveInNetbox:
                  description: |-
                    Defines whether the Resource should be preserved in NetBox when the
                    Kubernetes Resource is deleted.
                    - When set to true, the resource will not be deleted but preserved in
                      NetBox upon CR deletion
                    - When set to false, the resource will be cleaned up in NetBox
                      upon CR deletion
                    Setting preserveInNetbox to true is mandatory if the user wants to restore
                    resources from NetBox (e.g. Sticky CIDRs even if resources are deleted and
                    recreated in Kubernetes)
                    Field is mutable, not required
                  type: boolean
                site:
                  description: |-
                    The NetBox Site to be assigned to this resource in NetBox. Use the `name` value instead of the `slug` value
                    Field is immutable, not required
                    Example: "DM-Buffalo"
                  type: string
                  x-kubernetes-validations:
                    - message: Field 'site' is immutable
                      rule: self == oldSelf
                tenant:
                  description: |-
                    The NetBox Tenant to be assigned to this resource in NetBox. Use the `name` value instead of the `slug` value
                    Field is immutable, not required
                    Example: "Initech" or "Cyberdyne Systems"
                  type: string
                  x-kubernetes-validations:
                    - message: Field 'tenant' is immutable
                      rule: self == oldSelf
              required:
                - prefixLength
              type: object
              x-kubernetes-validations:
                - message: Site is required once set
                  rule: "!has(oldSelf.site) || has(self.site)"
                - rule:
                    (!has(self.parentPrefix) && has(self.parentPrefixSelector)) ||
                    (has(self.parentPrefix) && !has(self.parentPrefixSelector))
            status:
              description: PrefixClaimStatus defines the observed state of PrefixClaim
              properties:
                conditions:
                  description:
                    Conditions represent the latest available observations
                    of an object's state
                  items:
                    description:
                      Condition contains details for one aspect of the current
                      state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                parentPrefix:
                  description: |-
                    Due to the fact that the parentPrefix can be specified directly in
                    `.spec.parentPrefix` or selected from `.spec.parentPrefixSelector`,
                    we use this field to store exactly which parent prefix we are using
                    for all subsequent reconcile loop calls.
                  type: string
                prefix:
                  description: The assigned Prefix in CIDR notation
                  type: string
                prefixName:
                  description:
                    The name of the Prefix CR created by the PrefixClaim
                    Controller
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
